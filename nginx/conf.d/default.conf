server {
    server_name lhvm2.centralus.cloudapp.azure.com;
    listen 80 default_server;
    listen [::]:80 default_server;

    server_tokens off;

    # redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name lhvm2.centralus.cloudapp.azure.com;
    root /public_html/;

    server_tokens off;
    ssl_certificate        /etc/nginx/ssl/lhvm2.centralus.cloudapp.azure.com/fullchain.pem;
    ssl_certificate_key    /etc/nginx/ssl/lhvm2.centralus.cloudapp.azure.com/privkey.pem;

    ssl_buffer_size 8k;
    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    proxy_set_header     X-Real-IP           $remote_addr;
    proxy_set_header     X-Forwarded-For     $proxy_add_x_forwarded_for;
    proxy_set_header     X-Forwarded-Proto   $scheme;
    proxy_set_header     Host                $host;
    proxy_set_header     X-Forwarded-Host    $host;
    proxy_set_header     X-Forwarded-Port    $server_port;

    # Let's Encrypt validation (for renewal only, to initiate cert for the 1st time use initial.conf)
    location ~ /.well-known/acme-challenge {
        allow all;
        root /usr/share/nginx/html/letcsencrypt;
    }

    # This resource is a part of the azure-spring-boot-starter-active-directory library
    # Request is re-directed to this location when user initiates the login process
    location /oauth2/authorization/azure {
        proxy_pass http://app:8080/oauth2/authorization/azure;
    }

    # This resource is spring-boot-starter-oauth2-client library resource,
    # User is re-directed there after a successful login attempt on login.microsoftonline.com
    # Code generated by Azure AD is passed to this endpoint as a parameter
    location /login/oauth2/code {
        proxy_pass http://app:8080/login/oauth2/code;
    }

    # Custom re-direct to the API endpoints
    location /api {
        proxy_pass http://app:8080/api;
    }
}

